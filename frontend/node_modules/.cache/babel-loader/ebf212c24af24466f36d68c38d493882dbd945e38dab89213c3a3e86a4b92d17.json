{"ast":null,"code":"var _jsxFileName = \"C:\\\\ez\\\\Work\\\\Infomina-React-Node\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save to localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n  };\n\n  // Get current user profile\n  const refreshUserProfile = async () => {\n    try {\n      const response = await authService.getProfile();\n      const updatedUser = response.data;\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        logout();\n      }\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    refreshUserProfile,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","login","credentials","response","token","user","data","setItem","stringify","error","logout","removeItem","refreshUserProfile","getProfile","updatedUser","status","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ez/Work/Infomina-React-Node/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authService } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setCurrentUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      const { token, user } = response.data;\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  // Get current user profile\r\n  const refreshUserProfile = async () => {\r\n    try {\r\n      const response = await authService.getProfile();\r\n      const updatedUser = response.data;\r\n      \r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setCurrentUser(updatedUser);\r\n      \r\n      return updatedUser;\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        logout();\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    refreshUserProfile,\r\n    isAuthenticated: !!currentUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}